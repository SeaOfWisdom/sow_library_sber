// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/add_bookmark": {
            "get": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmarks"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "work id to add into bookmarks",
                        "name": "work_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.WorkResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/auth": {
            "get": {
                "description": "Auth account and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Auth account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "participant web3 address",
                        "name": "web3_address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.AuthResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/author_data": {
            "get": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authors"
                ],
                "summary": "TODO",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.BecomeAuthorDataResp"
                        }
                    }
                }
            }
        },
        "/author_info": {
            "get": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authors"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "author web3 address",
                        "name": "web3_address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.AuthorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/become_author": {
            "post": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authors"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "description": "update author info",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.BecomeAuthorRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer {JWT token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.AuthResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/become_validator": {
            "post": {
                "description": "Become a validator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validators"
                ],
                "summary": "Become a validator",
                "parameters": [
                    {
                        "description": "become validator",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.BecomeValidatorRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer {JWT token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.AuthResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/bookmarks": {
            "get": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmarks"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.WorkResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/get_basic_info": {
            "post": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participants"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.BasicInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/if_participant_exists": {
            "get": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participants"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "participant web3 address",
                        "name": "web3_address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.IfParticipantExistsResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/invite_co_author": {
            "post": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authors"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "description": "update author info",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.BecomeAuthorRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer {JWT token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/new_participant": {
            "post": {
                "description": "Become a new participant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participants"
                ],
                "summary": "Become a participant",
                "parameters": [
                    {
                        "description": "become participant",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.NewParticipantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.AuthResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/publish_work": {
            "post": {
                "description": "Publish a new work",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publish work"
                ],
                "summary": "Publish a new work",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "work and author info",
                        "name": "Work",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.WorkResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.WorkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/purchase_work": {
            "post": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchasing works"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "work id to purchase",
                        "name": "work_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer {JWT token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/purchased_works": {
            "get": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchasing works"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.WorkResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/remove_bookmark": {
            "post": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmarks"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "author web3 address",
                        "name": "web3_address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer {JWT token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/submit_work_review": {
            "post": {
                "description": "Submit work review by validator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Work review"
                ],
                "summary": "Submit review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "work id",
                        "name": "work_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "WORK_REVIEW_SUBMITTED",
                            "WORK_REVIEW_SKIPPED",
                            "WORK_REVIEW_REJECTED",
                            "WORK_REVIEW_DECLINED",
                            "WORK_REVIEW_ACCEPTED"
                        ],
                        "type": "string",
                        "description": "review status",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/update_author_info": {
            "post": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authors"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "description": "update author info",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.UpdateAuthorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.AuthResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/update_basic_info": {
            "post": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participants"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "description": "update basic participant info",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.BasicInfoUpdateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer {JWT token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.AuthResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/update_review": {
            "post": {
                "description": "Evaluate work by validator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Work review"
                ],
                "summary": "Evaluate work",
                "parameters": [
                    {
                        "description": "work review",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.WorkReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.WorkReview"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/update_validator_info": {
            "post": {
                "description": "Update validator info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validators"
                ],
                "summary": "Update validator",
                "parameters": [
                    {
                        "description": "update validator info",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.UpdateValidatorRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer {JWT token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.AuthResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/upload_doc": {
            "put": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "work id",
                        "name": "doc_type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer {JWT token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/validator_info": {
            "get": {
                "description": "Validator full info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validators"
                ],
                "summary": "Validator info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "validator web3 address",
                        "name": "web3_address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.ValidatorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/work_data": {
            "get": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publish work"
                ],
                "summary": "TODO",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.PublishWorkDataResp"
                        }
                    }
                }
            }
        },
        "/work_review": {
            "get": {
                "description": "Get all work reviews by work id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Work review"
                ],
                "summary": "Work reviews",
                "parameters": [
                    {
                        "type": "string",
                        "description": "work id",
                        "name": "work_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.WorkReview"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/work_reviews": {
            "get": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Work review"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "work id",
                        "name": "work_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.WorkReview"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/works": {
            "get": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Works"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "work id",
                        "name": "work_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.WorkResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/works/author": {
            "get": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Works"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "author web3 address",
                        "name": "web3_address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.WorkResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/works_by_key_words": {
            "get": {
                "description": "TODO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Works"
                ],
                "summary": "TODO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "words to search for",
                        "name": "key_words",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.WorkResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rest.AuthResp": {
            "type": "object",
            "properties": {
                "jwt_token": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string",
                    "example": "phd ***** destroyer"
                },
                "role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/storage.ParticipantRole"
                        }
                    ],
                    "example": 1
                }
            }
        },
        "rest.BasicInfo": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string",
                    "example": "phd ***** destroyer"
                },
                "role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/storage.ParticipantRole"
                        }
                    ],
                    "example": 1
                }
            }
        },
        "rest.BasicInfoUpdateRequest": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string",
                    "example": "phd ***** destroyer"
                }
            }
        },
        "rest.BecomeAuthorDataResp": {
            "type": "object",
            "properties": {
                "sciences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "rest.BecomeAuthorRequest": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string",
                    "example": "mr_math_phd@science.com"
                },
                "language": {
                    "type": "string"
                },
                "middlename": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orcid": {
                    "type": "string"
                },
                "scholar_ship_profile": {
                    "type": "string"
                },
                "sciences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "rest.BecomeValidatorRequest": {
            "type": "object",
            "properties": {
                "email_address": {
                    "description": "mandatory",
                    "type": "string"
                },
                "language": {
                    "description": "mandatory",
                    "type": "string"
                },
                "middlename": {
                    "type": "string"
                },
                "name": {
                    "description": "mandatory",
                    "type": "string"
                },
                "orcid": {
                    "type": "string"
                },
                "sciences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "surname": {
                    "description": "mandatory",
                    "type": "string"
                }
            }
        },
        "rest.ErrorMsg": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "null request param"
                }
            }
        },
        "rest.IfParticipantExistsResp": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "rest.NewParticipantRequest": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string",
                    "example": "phd ***** destroyer"
                },
                "web3_address": {
                    "type": "string"
                }
            }
        },
        "rest.PublishWorkDataResp": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "rest.SuccessMsg": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "OK"
                }
            }
        },
        "rest.UpdateAuthorRequest": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "middlename": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orcid": {
                    "type": "string"
                },
                "scholar_ship_profile": {
                    "type": "string"
                },
                "sciences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "rest.UpdateValidatorRequest": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "middlename": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orcid": {
                    "type": "string"
                },
                "sciences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "rest.WorkReviewRequest": {
            "type": "object",
            "properties": {
                "review": {
                    "$ref": "#/definitions/storage.WorkReview"
                }
            }
        },
        "storage.Author": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "middlename": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orcid": {
                    "type": "string"
                },
                "scholar_ship_profile": {
                    "type": "string"
                },
                "sciences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "storage.AuthorResponse": {
            "type": "object",
            "properties": {
                "author_info": {
                    "$ref": "#/definitions/storage.Author"
                },
                "basic_info": {
                    "$ref": "#/definitions/storage.Participant"
                }
            }
        },
        "storage.Participant": {
            "type": "object",
            "properties": {
                "language": {
                    "description": "'ru', 'en'",
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/storage.ParticipantRole"
                },
                "web3Address": {
                    "type": "string"
                }
            }
        },
        "storage.ParticipantRole": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "x-enum-comments": {
                "AdminRole": "5 Admin",
                "AdvisorRole": "3 Advisor",
                "AuthorRole": "2 Author",
                "GuestRole": "0 Guest",
                "ReaderRole": "1 Reader",
                "ValidatorRole": "4 Validator"
            },
            "x-enum-varnames": [
                "GuestRole",
                "ReaderRole",
                "AuthorRole",
                "AdvisorRole",
                "ValidatorRole",
                "AdminRole"
            ]
        },
        "storage.Validator": {
            "type": "object",
            "properties": {
                "diploma_id": {
                    "description": "referrenceKey",
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "middlename": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orcid": {
                    "type": "string"
                },
                "sciences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "storage.ValidatorResponse": {
            "type": "object",
            "properties": {
                "basic_info": {
                    "$ref": "#/definitions/storage.Participant"
                },
                "validator_info": {
                    "$ref": "#/definitions/storage.Validator"
                }
            }
        },
        "storage.Work": {
            "type": "object",
            "properties": {
                "annotation": {
                    "type": "string"
                },
                "content": {
                    "description": "BODY INFORMATION",
                    "allOf": [
                        {
                            "$ref": "#/definitions/storage.WorkContent"
                        }
                    ]
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "description": "BASE INFORMATION",
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "sources": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "storage.WorkContent": {
            "type": "object",
            "properties": {
                "work_data": {
                    "type": "string"
                }
            }
        },
        "storage.WorkResponse": {
            "type": "object",
            "properties": {
                "author_info": {
                    "$ref": "#/definitions/storage.AuthorResponse"
                },
                "bookmarked": {
                    "type": "boolean"
                },
                "work": {
                    "$ref": "#/definitions/storage.Work"
                }
            }
        },
        "storage.WorkReview": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "BODY REVIEW",
                    "allOf": [
                        {
                            "$ref": "#/definitions/storage.WorkReviewBody"
                        }
                    ]
                },
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                },
                "work_id": {
                    "type": "string"
                }
            }
        },
        "storage.WorkReviewBody": {
            "type": "object",
            "properties": {
                "questionnaire": {
                    "$ref": "#/definitions/storage.WorkReviewQuestionnaire"
                },
                "review": {
                    "type": "string"
                }
            }
        },
        "storage.WorkReviewQuestionnaire": {
            "type": "object",
            "properties": {
                "questions": {
                    "description": "0 - не согласен, 4 - согласен",
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
